{"version":3,"sources":["logo.svg","HOC/WithLoading.js","router/Home.js","router/About.js","router/PageNotFound.js","blogs/InputErrorMessage.js","utilities/utilities.js","blogs/store/action.js","blogs/FormCreate.js","blogs/FormCreateAsync.js","blogs/FormUpdate.js","blogs/FormUpdateAsync.js","blogs/Blog.js","blogs/Blogs.js","router/AppRouter.js","App.js","serviceWorker.js","blogs/store/reducer.js","index.js"],"names":["module","exports","__webpack_require__","p","Component","Home","react_default","a","createElement","About","PageNotFound","state","InpurErrorMessage","_ref","error","style","color","generateUniqueId","Math","random","toString","substr","startAnOperation","createAction","create","update","remove","FormCreate","title","description","imageUrl","errors","onInputChange","event","_this","setState","Object","defineProperty","target","name","value","verifyFormInputs","fromValues","_","isEmpty","onFormSubmit","preventDefault","verificationResult","pick","props","onCreateBlog","history","push","this","onSubmit","type","onChange","InputErrorMessage","connect","dispatch","id","actions","payload","setTimeout","FormUpdate","onCancel","onUpdateBlog","currentBlog","objectSpread","onClick","ownProps","cloneDeep","blogs","list","find","blog","match","params","Blog","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_this$props","onRemoveBlog","onRemoveBlogAsync","onClickShowUpdateForm","onClickShowUpdateFormAsync","className","src","Blogs","concat","_this2","map","blogs_Blog","assign","key","isLoading","objectWithoutProperties","AppRouter","Fragment","marginBottom","react_router_dom","to","exact","activeClassName","react_router","path","component","FormCreateAsync","FormUpdateAsync","App","router_AppRouter","Boolean","window","location","hostname","reducer","createReducer","_createReducer","action","findIndex","splice","store","configureStore","devTools","process","ReactDOM","render","es","basename","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.93faa708.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\nexport default Component => ({ isLoading, ...props }) => {\r\n  if (isLoading) return <div>Loading...</div>;\r\n  return <Component {...props} />;\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return <div>Hello Home</div>;\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\n\r\nclass About extends Component {\r\n  render() {\r\n    return <div>Hello About</div>;\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from \"react\";\r\n\r\nclass PageNotFound extends Component {\r\n  state = {};\r\n  render() {\r\n    return <h1>page not found !!</h1>;\r\n  }\r\n}\r\n\r\nexport default PageNotFound;\r\n","import React, { Component } from \"react\";\r\n\r\nconst InpurErrorMessage = ({ error }) => {\r\n  if (!!error) return <span style={{ color: \"red\" }}>{error}</span>;\r\n\r\n  return null;\r\n};\r\n\r\nexport default InpurErrorMessage;\r\n","export const generateUniqueId = () => {\r\n  return (\r\n    \"_\" +\r\n    Math.random()\r\n      .toString(36)\r\n      .substr(2, 9)\r\n  );\r\n};\r\n","import { createAction } from \"redux-starter-kit\";\r\n\r\nexport const startAnOperation = createAction(\"START_AN_OPERATION_BLOG\");\r\n\r\nexport const create = createAction(\"CREATE_BLOG\");\r\n\r\nexport const update = createAction(\"UPDATE_BLOG\");\r\n\r\nexport const remove = createAction(\"REMOVE_BLOG\");\r\n\r\nexport const createAsync = payload => dispatch => {\r\n  dispatch(startAnOperation());\r\n\r\n  setTimeout(() => {\r\n    dispatch(create(payload));\r\n  }, 1000);\r\n};\r\n\r\nexport const updateAsync = payload => dispatch => {\r\n  dispatch(startAnOperation());\r\n\r\n  setTimeout(() => {\r\n    dispatch(update(payload));\r\n  }, 1000);\r\n};\r\nexport const removeAsync = payload => dispatch => {\r\n  dispatch(startAnOperation());\r\n\r\n  setTimeout(() => {\r\n    dispatch(remove(payload));\r\n  }, 1000);\r\n};\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nimport InputErrorMessage from \"./InputErrorMessage\";\r\nimport { generateUniqueId } from \"../utilities/utilities\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"./store/action\";\r\nclass FormCreate extends Component {\r\n  state = {\r\n    title: \"\",\r\n    description: \"\",\r\n    imageUrl: \"\",\r\n    errors: null\r\n  };\r\n\r\n  onInputChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  verifyFormInputs = fromValues => {\r\n    let errors = {};\r\n\r\n    if (fromValues.title == \"\") {\r\n      errors.title = \"empty title !\";\r\n    }\r\n    if (fromValues.description == \"\") {\r\n      errors.description = \"empty description !\";\r\n    }\r\n    if (fromValues.imageUrl == \"\") {\r\n      errors.imageUrl = \"empty imageUrl !\";\r\n    }\r\n    if (_.isEmpty(errors)) return null;\r\n    else return errors;\r\n  };\r\n\r\n  onFormSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const verificationResult = this.verifyFormInputs(\r\n      _.pick(this.state, [\"title\", \"description\", \"imageUrl\"])\r\n    );\r\n\r\n    if (!verificationResult) {\r\n      this.props.onCreateBlog(\r\n        generateUniqueId(),\r\n        this.state.title,\r\n        this.state.description,\r\n        this.state.imageUrl\r\n      );\r\n\r\n      this.props.history.push(\"/blogs\");\r\n    }\r\n    this.setState({ errors: verificationResult });\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.onFormSubmit}>\r\n        <label>\r\n          title:\r\n          <input\r\n            name=\"title\"\r\n            type=\"text\"\r\n            value={this.state.title}\r\n            onChange={this.onInputChange}\r\n          />\r\n          <InputErrorMessage error={errors && errors.title} />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          description:\r\n          <input\r\n            name=\"description\"\r\n            type=\"text\"\r\n            value={this.state.description}\r\n            onChange={this.onInputChange}\r\n          />\r\n          <InputErrorMessage error={errors && errors.description} />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          imageUrl:\r\n          <input\r\n            name=\"imageUrl\"\r\n            type=\"text\"\r\n            value={this.state.imageUrl}\r\n            onChange={this.onInputChange}\r\n          />\r\n          <InputErrorMessage error={errors && errors.imageUrl} />\r\n        </label>\r\n        <br />\r\n        <input type=\"submit\" value=\"create\" />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onCreateBlog: (id, title, description, imageUrl) => {\r\n      dispatch(actions.create({ id, title, description, imageUrl }));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(FormCreate);\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nimport InputErrorMessage from \"./InputErrorMessage\";\r\nimport { generateUniqueId } from \"../utilities/utilities\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"./store/action\";\r\nclass FormCreate extends Component {\r\n  state = {\r\n    title: \"\",\r\n    description: \"\",\r\n    imageUrl: \"\",\r\n    errors: null\r\n  };\r\n\r\n  onInputChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  verifyFormInputs = fromValues => {\r\n    let errors = {};\r\n\r\n    if (fromValues.title == \"\") {\r\n      errors.title = \"empty title !\";\r\n    }\r\n    if (fromValues.description == \"\") {\r\n      errors.description = \"empty description !\";\r\n    }\r\n    if (fromValues.imageUrl == \"\") {\r\n      errors.imageUrl = \"empty imageUrl !\";\r\n    }\r\n    if (_.isEmpty(errors)) return null;\r\n    else return errors;\r\n  };\r\n\r\n  onFormSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const verificationResult = this.verifyFormInputs(\r\n      _.pick(this.state, [\"title\", \"description\", \"imageUrl\"])\r\n    );\r\n\r\n    if (!verificationResult) {\r\n      this.props.onCreateBlog(\r\n        generateUniqueId(),\r\n        this.state.title,\r\n        this.state.description,\r\n        this.state.imageUrl\r\n      );\r\n\r\n      this.props.history.push(\"/blogs\");\r\n    }\r\n    this.setState({ errors: verificationResult });\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.onFormSubmit}>\r\n        <label>\r\n          title:\r\n          <input\r\n            name=\"title\"\r\n            type=\"text\"\r\n            value={this.state.title}\r\n            onChange={this.onInputChange}\r\n          />\r\n          <InputErrorMessage error={errors && errors.title} />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          description:\r\n          <input\r\n            name=\"description\"\r\n            type=\"text\"\r\n            value={this.state.description}\r\n            onChange={this.onInputChange}\r\n          />\r\n          <InputErrorMessage error={errors && errors.description} />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          imageUrl:\r\n          <input\r\n            name=\"imageUrl\"\r\n            type=\"text\"\r\n            value={this.state.imageUrl}\r\n            onChange={this.onInputChange}\r\n          />\r\n          <InputErrorMessage error={errors && errors.imageUrl} />\r\n        </label>\r\n        <br />\r\n        <input type=\"submit\" value=\"create async\" />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onCreateBlog: (id, title, description, imageUrl) => {\r\n      dispatch(actions.createAsync({ id, title, description, imageUrl }));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(FormCreate);\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nimport InputErrorMessage from \"./InputErrorMessage\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"./store/action\";\r\n\r\nclass FormUpdate extends Component {\r\n  state = {\r\n    id: \"\",\r\n    title: \"\",\r\n    description: \"\",\r\n    imageUrl: \"\",\r\n    errors: null\r\n  };\r\n\r\n  onInputChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  verifyFormInputs = fromValues => {\r\n    let errors = {};\r\n\r\n    if (fromValues.title == \"\") {\r\n      errors.title = \"empty title !\";\r\n    }\r\n    if (fromValues.description == \"\") {\r\n      errors.description = \"empty description !\";\r\n    }\r\n    if (fromValues.imageUrl == \"\") {\r\n      errors.imageUrl = \"empty imageUrl !\";\r\n    }\r\n    if (_.isEmpty(errors)) return null;\r\n    else return errors;\r\n  };\r\n\r\n  onCancel = () => {\r\n    this.props.history.push(\"/blogs/create\");\r\n  };\r\n\r\n  onFormSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const verificationResult = this.verifyFormInputs(\r\n      _.pick(this.state, [\"title\", \"description\", \"imageUrl\"])\r\n    );\r\n    if (!verificationResult) {\r\n      debugger;\r\n      this.props.onUpdateBlog(\r\n        this.state.id,\r\n        this.state.title,\r\n        this.state.description,\r\n        this.state.imageUrl\r\n      );\r\n      this.props.history.push(\"/blogs\");\r\n    }\r\n    this.setState({ errors: verificationResult });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { currentBlog } = this.props;\r\n    this.setState({ ...currentBlog });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.onFormSubmit}>\r\n        <label>\r\n          title:\r\n          <input\r\n            name=\"title\"\r\n            type=\"text\"\r\n            value={this.state.title}\r\n            onChange={this.onInputChange}\r\n          />\r\n          <InputErrorMessage error={errors && errors.title} />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          description:\r\n          <input\r\n            name=\"description\"\r\n            type=\"text\"\r\n            value={this.state.description}\r\n            onChange={this.onInputChange}\r\n          />\r\n          <InputErrorMessage error={errors && errors.description} />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          imageUrl:\r\n          <input\r\n            name=\"imageUrl\"\r\n            type=\"text\"\r\n            value={this.state.imageUrl}\r\n            onChange={this.onInputChange}\r\n          />\r\n          <InputErrorMessage error={errors && errors.imageUrl} />\r\n        </label>\r\n        <br />\r\n        <input type=\"submit\" value=\"update\" />\r\n        <button onClick={this.onCancel}>cancel</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onUpdateBlog: (id, title, description, imageUrl) => {\r\n      dispatch(actions.update({ id, title, description, imageUrl }));\r\n    }\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    currentBlog: _.cloneDeep(\r\n      state.blogs.list.find(blog => blog.id == ownProps.match.params.id)\r\n    )\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(FormUpdate);\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nimport InputErrorMessage from \"./InputErrorMessage\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"./store/action\";\r\n\r\nclass FormUpdate extends Component {\r\n  state = {\r\n    id: \"\",\r\n    title: \"\",\r\n    description: \"\",\r\n    imageUrl: \"\",\r\n    errors: null\r\n  };\r\n\r\n  onInputChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  verifyFormInputs = fromValues => {\r\n    let errors = {};\r\n\r\n    if (fromValues.title == \"\") {\r\n      errors.title = \"empty title !\";\r\n    }\r\n    if (fromValues.description == \"\") {\r\n      errors.description = \"empty description !\";\r\n    }\r\n    if (fromValues.imageUrl == \"\") {\r\n      errors.imageUrl = \"empty imageUrl !\";\r\n    }\r\n    if (_.isEmpty(errors)) return null;\r\n    else return errors;\r\n  };\r\n\r\n  onCancel = () => {\r\n    this.props.history.push(\"/blogs/create\");\r\n  };\r\n\r\n  onFormSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const verificationResult = this.verifyFormInputs(\r\n      _.pick(this.state, [\"title\", \"description\", \"imageUrl\"])\r\n    );\r\n    if (!verificationResult) {\r\n      debugger;\r\n      this.props.onUpdateBlog(\r\n        this.state.id,\r\n        this.state.title,\r\n        this.state.description,\r\n        this.state.imageUrl\r\n      );\r\n      this.props.history.push(\"/blogs\");\r\n    }\r\n    this.setState({ errors: verificationResult });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { currentBlog } = this.props;\r\n    this.setState({ ...currentBlog });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.onFormSubmit}>\r\n        <label>\r\n          title:\r\n          <input\r\n            name=\"title\"\r\n            type=\"text\"\r\n            value={this.state.title}\r\n            onChange={this.onInputChange}\r\n          />\r\n          <InputErrorMessage error={errors && errors.title} />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          description:\r\n          <input\r\n            name=\"description\"\r\n            type=\"text\"\r\n            value={this.state.description}\r\n            onChange={this.onInputChange}\r\n          />\r\n          <InputErrorMessage error={errors && errors.description} />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          imageUrl:\r\n          <input\r\n            name=\"imageUrl\"\r\n            type=\"text\"\r\n            value={this.state.imageUrl}\r\n            onChange={this.onInputChange}\r\n          />\r\n          <InputErrorMessage error={errors && errors.imageUrl} />\r\n        </label>\r\n        <br />\r\n        <input type=\"submit\" value=\"update async\" />\r\n        <button onClick={this.onCancel}>cancel</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onUpdateBlog: (id, title, description, imageUrl) => {\r\n      dispatch(actions.updateAsync({ id, title, description, imageUrl }));\r\n    }\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    currentBlog: _.cloneDeep(\r\n      state.blogs.list.find(blog => blog.id == ownProps.match.params.id)\r\n    )\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(FormUpdate);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass Blog extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      title,\r\n      description,\r\n      imageUrl,\r\n      onRemoveBlog,\r\n      onRemoveBlogAsync,\r\n      onClickShowUpdateForm,\r\n      onClickShowUpdateFormAsync\r\n    } = this.props;\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card-img-container\">\r\n          <img className=\"card-img\" src={imageUrl} />\r\n        </div>\r\n        <h1>{title}</h1>\r\n        <p>{description}</p>\r\n        <button onClick={onClickShowUpdateForm}>update</button>\r\n        <button onClick={onClickShowUpdateFormAsync}>update async</button>\r\n        <button onClick={onRemoveBlog}>delete</button>\r\n        <button onClick={onRemoveBlogAsync}>delete async</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Blog;\r\n","import React, { Component } from \"react\";\r\nimport Blog from \"./Blog\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"./store/action\";\r\nimport WithLoading from \"../HOC/WithLoading\";\r\nclass Blogs extends Component {\r\n  onClickShowUpdateForm = id => {\r\n    const { history } = this.props;\r\n    history.push(`/blogs/update/${id}`);\r\n  };\r\n  onClickShowUpdateFormAsync = id => {\r\n    const { history } = this.props;\r\n    history.push(`/blogs/update-async/${id}`);\r\n  };\r\n\r\n  render() {\r\n    const { blogs, onRemoveBlog, onRemoveBlogAsync } = this.props;\r\n    return (\r\n      <div>\r\n        {blogs.map(blog => {\r\n          return (\r\n            <Blog\r\n              key={blog.id}\r\n              onRemoveBlogAsync={() => onRemoveBlogAsync(blog.id)}\r\n              onClickShowUpdateForm={() => this.onClickShowUpdateForm(blog.id)}\r\n              onClickShowUpdateFormAsync={() =>\r\n                this.onClickShowUpdateFormAsync(blog.id)\r\n              }\r\n              onRemoveBlog={() => onRemoveBlog(blog.id)}\r\n              {...blog}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    blogs: state.blogs.list,\r\n    isLoading: state.blogs.isLoading\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onRemoveBlog: id => {\r\n      dispatch(actions.remove(id));\r\n    },\r\n    onRemoveBlogAsync: id => {\r\n      dispatch(actions.removeAsync(id));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(WithLoading(Blogs));\r\n","import React, { Component } from \"react\";\r\nimport { Switch, Route, NavLink, BrowserRouter } from \"react-router-dom\";\r\n\r\nimport Home from \"./Home\";\r\nimport About from \"./About\";\r\nimport PageNotFound from \"./PageNotFound\";\r\n// import Header from \"./Header\";\r\nimport {\r\n  Blogs,\r\n  FormCreate,\r\n  FormUpdate,\r\n  FormCreateAsync,\r\n  FormUpdateAsync\r\n} from \"../blogs\";\r\n\r\n// import Blogs from \"./Blogs\";\r\n\r\nclass AppRouter extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        {/* <Header /> */}\r\n        <div style={{ marginBottom: \"20px\" }}>\r\n          <NavLink to=\"/\" exact activeClassName=\"active-link\">\r\n            Home\r\n          </NavLink>{\" \"}\r\n          <NavLink to=\"/blogs/create\" exact activeClassName=\"active-link\">\r\n            create blog\r\n          </NavLink>{\" \"}\r\n          <NavLink to=\"/blogs/create-async\" exact activeClassName=\"active-link\">\r\n            create blog Async\r\n          </NavLink>{\" \"}\r\n          <NavLink to=\"/blogs\" exact activeClassName=\"active-link\">\r\n            list blogs\r\n          </NavLink>{\" \"}\r\n          <NavLink to=\"/about\" exact activeClassName=\"active-link\">\r\n            About\r\n          </NavLink>\r\n        </div>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/about\" exact component={About} />\r\n          <Route path=\"/blogs/create\" exact component={FormCreate} />\r\n          <Route path=\"/blogs/create-async\" exact component={FormCreateAsync} />\r\n          <Route path=\"/blogs/update/:id\" exact component={FormUpdate} />\r\n          <Route\r\n            path=\"/blogs/update-async/:id\"\r\n            exact\r\n            component={FormUpdateAsync}\r\n          />\r\n          <Route path=\"/blogs\" exact component={Blogs} />\r\n\r\n          <Route component={PageNotFound} />\r\n        </Switch>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport AppRouter from \"./router/AppRouter\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppRouter />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import _ from \"lodash\";\r\nimport { create, remove, update, startAnOperation } from \"./action\";\r\nimport { createReducer } from \"redux-starter-kit\";\r\n\r\nconst initialState = { list: [], isLoading: false };\r\n\r\nconst reducer = createReducer(initialState, {\r\n  [startAnOperation]: (state, action) => {\r\n    state.isLoading = true;\r\n  },\r\n  [create]: (state, action) => {\r\n    state.list.push(action.payload);\r\n    state.isLoading = false;\r\n  },\r\n  [update]: (state, action) => {\r\n    state.list[state.list.findIndex(blog => blog.id == action.payload.id)] =\r\n      action.payload;\r\n    state.isLoading = false;\r\n  },\r\n  [remove]: (state, action) => {\r\n    state.list.splice(\r\n      state.list.findIndex(blog => blog.id == action.payload),\r\n      1\r\n    );\r\n    state.isLoading = false;\r\n  }\r\n});\r\n\r\nexport default reducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { configureStore } from \"redux-starter-kit\";\nimport blogsReducer from \"./blogs/store/reducer\";\n\nconst reducer = {\n  blogs: blogsReducer\n};\n\nconst store = configureStore({\n  reducer,\n  devTools: process.env.NODE_ENV !== \"production\"\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}